#! /bin/sh

if [ $# != 1 ]
then
	echo "usage: install-common mode"
	exit 1
fi

db_mode=$1
host=`hostname -s`

case $db_mode in
dev | test)
	user=`id -un`
	conf_key=${user}-${db_mode}
	;;
production)
	conf_key=${db_mode}
	;;
*)
	echo "invalid db_mode $db_mode"
	exit 1
	;;
esac

db_name=zorky-${conf_key}
apache_conf_dir=/etc/apache2/conf.d
apachectl_cmd=apache2ctl
site_root=/var/www/html/zorky-${conf_key}
apache_conf=zorky-${host}-${conf_key}.conf
aux_dir=/var/zorky-${conf_key}

if [ $db_mode = production ]
then
    x=`git ls-files -o -m --exclude-standard`
    if [  -z "$x" ]
    then
	echo ""
	echo "*** working directory is dirty - it has to be clean"
	echo "*** to do install-production"
	echo ""
	git status
	exit 1
    fi

    x=`git status | grep 'Your branch is ahead of'`
    if [ ! -z "$x" ]
    then
	echo "It looks like you need to do a git push first"
	exit 1
    fi

    commit_file=${site_root}/commit
    if [ -r $commit_file ]
    then
	installed_commit=`cat ${commit_file}`
    else
	installed_commit="none";
    fi
    git rev-list HEAD | grep "^${installed_commit}" > /dev/null 2>&1
    if [ $? != 0 ]
    then
	echo "the commit signature in ${site_root}/commit is"
	echo "not an ancestor of the working directory."
	echo "You probably need to do a git pull, retest on your"
	echo "development machine, then try again."
	echo ""
	echo "If you really want to blast ahead, do this, then"
	echo "run install-production again:"
	echo ""
	echo "git rev-list -n 1 HEAD > ${site_root}/commit"
	exit 1
    fi
fi


make -q
if [ $? != 0 ]
then
    if [ "$db_mode" = "production" ]
    then
	echo "you need to run make"
	exit 1
    fi
    make
fi

mkdir -p ${site_root}

rm -f ${site_root}/zorky-conf.php
cat > ${site_root}/zorky-conf.php <<!
<?php
  global \$db_name, \$site_root, \$conf_key, \$aux_dir;
  \$db_name = '${db_name}';
  \$site_root = '${site_root}';
  \$conf_key = '${conf_key}';
  \$aux_dir = '${aux_dir}';
?>
!


cmp -s $apache_conf $apache_conf_dir/$apache_conf
if [ $? != 0 ]
then
    if [ `id -u` = 0 ]
    then
	echo "updating apache conf"
	cp $apache_conf $apache_conf_dir/. 
	$apachectl_cmd graceful
	if [ $? != 0 ]
	then
	    echo "error updating apache conf"
	    exit 1
	    fi
    else
	echo "need apache conf update ... run this as root:"
	echo ""
	echo "cp $apache_conf $apache_conf_dir/. ; $apachectl_cmd graceful"
	exit 1
    fi
fi

mkdir -p -m 777 ${aux_dir}/tmp
mkdir -p ${aux_dir}/bin
mkdir -p ${aux_dir}/z5

echo -n "doing setcap on run-dfrotz - may prompt for root password..."

if [ "$db_mode" = "production" ]
then
    cp `cat SITE-FILES` ${site_root}/.
    install -c -m 755 run-dfrotz ${aux_dir}/bin/.
    sudo setcap cap_sys_chroot+ep ${aux_dir}/bin/run-dfrotz
else
    for f in `cat SITE-FILES`
    do
	rm -f ${site_root}/${f}
	ln -s `pwd`/$f ${site_root}/${f}
    done

    dir=`pwd`
    ln -sf $dir/run-dfrotz ${aux_dir}/bin/.
    sudo setcap cap_sys_chroot+ep run-dfrotz
fi
echo ""

if [ ! -x ../frotz-2.43/dfrotz ]
then
    echo "do 'make dumb' in frotz first"
    exit 1
fi
install -c -m 755 ../frotz-2.43/dfrotz ${aux_dir}/bin/.
cp ../z5/* ${aux_dir}/z5/.

rm -f ${site_root}/commit
git rev-list -n 1 HEAD > ${site_root}/commit

